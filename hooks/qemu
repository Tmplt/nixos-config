#!/usr/bin/env bash
# This script dynamically manages allocated hugepages size depending on running libvirt VMs.
# Based on rokups' shell script which sets up the host for VM: https://rokups.github.io/#!pages/gaming-vm-performance.md
# Put this script to /etc/libvirt/hooks/qemu

TOTAL_CORES='0-7'
TOTAL_CORES_MASK=FF
HOST_CORES='2-3,6-7'
HOST_CORES_MASK=CC
VIRT_CORES='0-1,4-5'

HUGEPAGES_SIZE=$(grep Hugepagesize /proc/meminfo | awk {'print $2'})
HUGEPAGES_SIZE=$((HUGEPAGES_SIZE * 1024))
HUGEPAGES_ALLOCATED=$(sysctl vm.nr_hugepages | awk {'print $3'})

VM_NAME=$1
VM_ACTION=$2

shield_vm() {
    # cset set -c $TOTAL_CORES -c machine.slice

    # Shield two cores for host and rest for VM(s)
    cset shield --kthread on --cpu $VIRT_CORES
}

unshield_vm() {
    echo $TOTAL_CORES_MASK > /sys/bus/workqueue/devices/writeback/cpumask
    cset shield --reset
}

# For manual invocation
if [[ $VM_NAME == 'shield' ]]; then
    shield_vm
    exit 0
elif [[ $VM_NAME == 'unshield' ]]; then
    unshield_vm
    exit 0
fi

# cd $(dirname "$0")
# hardcoded for now, for vidya.xml
VM_HUGEPAGES_NEED=$(( 8589934592 / HUGEPAGES_SIZE ))

if [[ $VM_ACTION == 'prepare' ]]; then
    echo 3 > /proc/sys/vm/drop_caches
    echo 1 > /proc/sys/vm/compact_memory

    VM_HUGEPAGES_TOTAL=$(($HUGEPAGES_ALLOCATED + $VM_HUGEPAGES_NEED))
    sysctl vm.nr_hugepages=$VM_HUGEPAGES_TOTAL

    if [[ $HUGEPAGES_ALLOCATED == '0' ]]; then
        shield_vm
        # Reduce VM jitter https://www.kernel.org/doc/Documentation/kernel-per-CPU-kthreads.txt
        sysctl vm.stat_interval=120

        sysctl -w kernel.watchdog=0

        echo $HOST_CORES_MASK > /sys/bus/workqueue/devices/writeback/cpumask

        # THP can allegedly result in jitter. Better keep it off
        echo never > /sys/kernel/mm/transparent_hugepage/enabled

        # Fix KMODE_EXCEPTION_NOT_HANDLED BSOD for some games
        echo 1 > /sys/module/kvm/parameters/ignore_msrs

        # Force P-states to P0
        echo performance | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
        echo 0 > /sys/bus/workqueue/devices/writeback/numa
        >&2 echo "VMs shielded"
    fi
fi

if [[ $VM_ACTION == 'release' ]]; then
    VM_HUGEPAGES_TOTAL=$(($HUGEPAGES_ALLOCATED - $VM_HUGEPAGES_NEED))
    VM_HUGEPAGES_TOTAL=$(($VM_HUGEPAGES_TOTAL<0?0:$VM_HUGEPAGES_TOTAL))
    sysctl vm.nr_hugepages=$VM_HUGEPAGES_TOTAL

    if [[ $VM_HUGEPAGES_TOTAL == '0' ]]; then
        # All VMs offline
        sysctl vm.stat_interval=1
        sysctl -w kernel.watchdog=1
        unshield_vm
        echo always > /sys/kernel/mm/transparent_hugepage/enabled
        echo powersave | tee /sys/devices/systems/cpu/cpu*/cpufreq/scaling_governor
        echo 1 > /sys/bus/workqueue/devices/writeback/numa
        echo 0 > /sys/module/kvm/parameters/ignore_msrs
        >&2 echo "VMs unshielded"
    fi
fi

